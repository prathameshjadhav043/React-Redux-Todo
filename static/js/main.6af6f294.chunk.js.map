{"version":3,"sources":["Components/Nav.js","Components/Main.js","Actions/index.js","Components/Forms.js","Components/FormItems.js","App.js","Reducers/reducers.js","Reducers/index.js","localStore.js","index.js"],"names":["Nav","className","type","id","Main","useState","fname","setFname","lname","setlname","username","setUsername","city","setCity","state","setState","zip","setZip","dispatch","useDispatch","onSubmit","e","preventDefault","State","payload","Date","getTime","toString","addTodo","htmlFor","placeholder","required","value","onChange","target","selected","disabled","requiredvalue","Forms","props","item","detail","setDetail","onClick","key","delTodo","FormsItems","items","useSelector","todoReducers","data","map","App","initialData","action","newdata","filter","rootReducer","combineReducers","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6af6f294.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Nav = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid mx-4\">\r\n                    <p className=\"navbar-brand\">Redux Form</p>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <p className=\"nav-link active\" aria-current=\"page\">Home</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addTodo } from '../Actions';\r\n\r\n\r\nconst Main = () => {\r\n\r\n    const [fname, setFname] = useState('');\r\n    const [lname, setlname] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [city, setCity] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [zip, setZip] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(addTodo(fname, lname, username, city, state, zip))\r\n        setFname('');\r\n        setlname('');\r\n        setUsername('');\r\n        setCity('');\r\n        setState('');\r\n        setZip('');\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <div className=\"main\">\r\n                <form className=\"row g-3 needs-validation\" onSubmit={submit}>\r\n                    <div className=\"col-md-4\">\r\n                        <label htmlFor=\"validationCustom01\" className=\"form-label\">First Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"validationCustom01\" placeholder='First Name' required value={fname} onChange={(e) => { setFname(e.target.value) }} />\r\n                        <div className=\"valid-feedback\">Looks good!</div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <label htmlFor=\"validationCustom02\" className=\"form-label\">Last Name</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"validationCustom02\" placeholder='Last Name' required value={lname} onChange={(e) => { setlname(e.target.value) }} />\r\n                        <div className=\"valid-feedback\">Looks good!</div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <label htmlFor=\"validationCustomUsername\" className=\"form-label\">Username</label>\r\n                        <div className=\"input-group has-validation\">\r\n                            <span className=\"input-group-text\" id=\"inputGroupPrepend\">@</span>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Username\" id=\"validationCustomUsername\" aria-describedby=\"inputGroupPrepend\" required value={username} onChange={(e) => { setUsername(e.target.value) }} />\r\n                            <div className=\"invalid-feedback\">Please choose a username. </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                        <label htmlFor=\"validationCustom03\" className=\"form-label\">City</label>\r\n                        <input type=\"text\" className=\"form-control\" placeholder=\"City\" id=\"validationCustom03\" required value={city} onChange={(e) => { setCity(e.target.value) }} />\r\n                        <div className=\"invalid-feedback\">Please provide a valid city.</div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <label htmlFor=\"validationCustom04\" className=\"form-label\">State</label>\r\n                        <select className=\"form-select\" id=\"validationCustom04\" required value={state} onChange={(e) => { setState(e.target.value) }}>\r\n                            <option selected disabled >Choose...</option>\r\n                            <option>...</option>\r\n                            <option>Maharshtra</option>\r\n                            <option>Hydrabad</option>\r\n                            <option>Chennai</option>\r\n                            <option>Banglore</option>\r\n                            <option>Gujrat</option>\r\n                            <option>Utterpardes</option>\r\n                        </select>\r\n                        <div className=\"invalid-feedback\">Please select a valid state.</div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                        <label htmlFor=\"validationCustom05\" className=\"form-label\">Zip</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"validationCustom05\" requiredvalue={zip} onChange={(e) => { setZip(e.target.value) }} />\r\n                        <div className=\"invalid-feedback\">Please provide a valid zip.</div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-check\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"invalidCheck\" required />\r\n                            <label className=\"form-check-label\" htmlFor=\"invalidCheck\">Agree to terms and conditions</label>\r\n                            <div className=\"invalid-feedback\">You must agree before submitting.</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <button className=\"btn btn-sm btn-primary\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;","export const addTodo = (fname, lname, username, city, State, zip) => {\r\n    return {\r\n        type: 'add_Todo',\r\n        payload: {\r\n            id: new Date().getTime().toString(),\r\n            fname: fname,\r\n            lname: lname,\r\n            username: username,\r\n            city: city,\r\n            State: State,\r\n            zip: zip,\r\n        }\r\n    }\r\n}\r\nexport const delTodo = (id) => {\r\n    return {\r\n        type: 'del_Todo',\r\n        payload: {\r\n            key: id\r\n        }\r\n    }\r\n}","import React from 'react'\r\nimport { delTodo } from '../Actions/index'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react'\r\n\r\n\r\nconst Forms = (props) => {\r\n\r\n    const { fname,lname, username, id, city, State, zip} = props.item;\r\n\r\n    const [detail, setDetail] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const del = () => {\r\n        dispatch(delTodo(id));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='form_m'>\r\n            <div className=\"form_d\">\r\n                    <label className=\"fn mx-1\">{fname}</label>\r\n                    <label className=\"us mx-1\">{lname}</label>\r\n                <div className='btns'>\r\n                    <button className=\"btn btn_ btn-sm btn-info text-white mx-1\" onClick={() => {\r\n                        setDetail((e) => {\r\n                            if (e) return false; else return true;\r\n                        })\r\n                    }} >Details</button>\r\n                    <button className=\"btn btn_ btn-sm btn-danger mx-1\" onClick={() => { del() }}>Delete</button>\r\n                </div>\r\n            </div>\r\n            {detail ?\r\n                (<>\r\n                <div className='container'>\r\n                    <label className=\"u\">{username}</label>\r\n                    <label className=\"c\">{city}</label>\r\n                    <label className=\"s\">{State}</label>\r\n                    <label className=\"z\">{zip}</label>\r\n                </div>\r\n                <hr />\r\n                </>) : (<></>)\r\n            }\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default Forms;","import React from 'react'\r\nimport Forms from './Forms'\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nexport const FormsItems = () => {\r\n\r\n    const items = useSelector((state) => state.todoReducers.data);\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <label className=\"t\">Submited Forms</label>\r\n            <hr />\r\n            {items.map((item) => {\r\n                return (\r\n                    <Forms item={item} key={item.id} />\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport './App.css'\r\nimport { Nav } from './Components/Nav'\r\nimport Main from './Components/Main'\r\nimport { FormsItems } from './Components/FormItems'\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Nav />\r\n            <Main />\r\n            <FormsItems />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","const initialData = {\r\n    data: []\r\n}\r\n\r\nconst todoReducers = (state = initialData, action) => {\r\n    switch (action.type) {\r\n        case 'add_Todo':\r\n            const { id, fname, lname, username, city, State, zip } = action.payload;\r\n            return {\r\n                ...state, data: [...state.data, {\r\n                    id: id,\r\n                    fname: fname,\r\n                    lname: lname,\r\n                    username: username,\r\n                    city: city,\r\n                    State: State,\r\n                    zip: zip,\r\n                }]\r\n            }\r\n        case 'del_Todo':\r\n            const { key } = action.payload;\r\n            const newdata = state.data.filter((e) => e.id !== key);\r\n            return {\r\n                ...state,\r\n                data: newdata\r\n            }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default todoReducers;","import todoReducers from './reducers'\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducer = combineReducers({ todoReducers })\r\n\r\nexport default rootReducer;","import { createStore } from 'redux'\r\nimport rootReducer from './Reducers/index'\r\n\r\nexport const loadState = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n        return JSON.parse(serializedState);\r\n    } catch (err) {\r\n        return undefined;\r\n    }\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch (err) {\r\n        // ignore write erros\r\n    }\r\n};\r\n\r\nconst persistedState = loadState();\r\n\r\n\r\nconst store = createStore(rootReducer, persistedState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App.js'\r\nimport './index.css'\r\nimport { Provider } from 'react-redux'\r\nimport { saveState } from './localStore'\r\nimport store from './localStore'\r\n\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n});\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}